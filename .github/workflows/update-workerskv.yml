name: Update-CloudflareWorkersKV

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "json/*.json"

jobs:
  update-kv:
    runs-on: ubuntu-latest
    name: update

    steps:
      - uses: actions/checkout@v2

      - name: Install Wrangler
        id: install-wrangler
        shell: bash
        run: |
          npm install -g wrangler

      - name: Update recent apps
        id: update-apps
        shell: pwsh
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          CLOUDFLARE_ZONE_ID: ${{secrets.CLOUDFLARE_ZONE_ID}}
          CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
        run: |
          foreach ($Update in @("${{ github.workspace }}/json/update-pwsh.txt", "${{ github.workspace }}/json/update-powershell.txt")) {
              $Files = Get-Content -Path $Update -ErrorAction "SilentlyContinue"
              if ($Null -ne $Files) {
                  Write-Host "Found $($Files.Count) files with changes."
                  foreach ($item in $Files) {
                      Write-Host "Update with: ${{ github.workspace }}/$item."
                      $file = Get-Item -Path "${{ github.workspace }}/$item"
                      if ($Null -ne $file) {
                          wrangler kv:key put $file.BaseName.ToLower() --path=$($file.FullName) --namespace-id="${{secrets.KV_PROD_NAMESPACE_ID}}"
                      }
                  }
              }
          }

      - name: Install and cache PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4.5
        with:
          modules-to-cache: Evergreen
          force: true
          shell: pwsh

      - name: Update Evergreen
        id: update-evergreen
        shell: pwsh
        run: |
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          Install-PackageProvider -Name "NuGet" -MinimumVersion 2.8.5.208 -Force
          Set-PSRepository -Name "PSGallery" -InstallationPolicy "Trusted" -ErrorAction "SilentlyContinue"
          Update-Module -Name Evergreen -Force -Confirm:$False

      - name: Update all apps list
        id: update-allapps
        shell: pwsh
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          CLOUDFLARE_ZONE_ID: ${{secrets.CLOUDFLARE_ZONE_ID}}
          CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
        run: |
          try {
            Import-Module -Name "Evergreen" -Force
            Find-EvergreenApp | ConvertTo-Json | Out-File -FilePath "./AllApps.json" -Encoding "Utf8" -NoNewline
            wrangler kv:key put "_allapps" --path="./AllApps.json" --namespace-id="${{secrets.KV_PROD_NAMESPACE_ID}}"
          }
          catch { $_.Exception.Message }
          finally { Remove-Item -Path "./AllApps.json" -Force -ErrorAction "SilentlyContinue" }
