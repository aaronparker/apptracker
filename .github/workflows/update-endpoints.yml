name: update-endpoints

# Environment variables
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Controls when the action will run.
on:
  workflow_dispatch:

jobs:

  update-endpoints-versions:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'aaronparker/evergreen'
          ref: main

      - name: Update Cloudflare KV for endpoints/versions data
        id: update-endpoints
        shell: pwsh
        working-directory: "${{ github.workspace }}"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          CLOUDFLARE_ZONE_ID: ${{secrets.CLOUDFLARE_ZONE_ID}}
          CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
        run: |
            # Get endpoint URLs from Evergreen manifests and post to the version endpoint
            $UrlMatch = "http[s]?\:\/\/([^\/?#]+)(?:[\/?#]|$)"
            $Endpoints = Get-ChildItem -Path "${{ github.workspace }}/Evergreen/Manifests" -Recurse -Include "*.json" | ForEach-Object {
                [PSCustomObject]@{
                    Application = $_.BaseName
                    Endpoints   = ((((Select-String -Path $_.FullName -Pattern $UrlMatch).Matches.Value | `
                        Select-Object -Unique | `
                        Sort-Object) -replace "http://|https://", "").TrimEnd("/|#"))
                }
            }
            $Endpoints | ConvertTo-Json | Out-File -FilePath "${{ github.workspace }}/Endpoints.json" -Encoding "Utf8" -NoNewline
            wrangler kv:key put "endpoints-versions" --path="${{ github.workspace }}/Endpoints.json" --namespace-id="${{secrets.KV_PROD_NAMESPACE_ID}}"
            Remove-Item -Path "${{ github.workspace }}/Endpoints.json"

  update-endpoints-downloads:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Update Cloudflare KV for endpoints/downloads data
        id: update-endpoints
        shell: pwsh
        working-directory: "${{ github.workspace }}"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          CLOUDFLARE_ZONE_ID: ${{secrets.CLOUDFLARE_ZONE_ID}}
          CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
        run: |
            # Get endpoint URLs from Evergreen manifests and post to the downloads endpoint
            $UrlMatch = "http[s]?\:\/\/([^\/?#]+)(?:[\/?#]|$)"
            $Endpoints = Get-ChildItem -Path "${{ github.workspace }}/json" -Recurse -Include "*.json" | ForEach-Object {
                [PSCustomObject]@{
                    Application = $_.BaseName
                    Endpoints   = ((((Select-String -Path $_.FullName -Pattern $UrlMatch).Matches.Value | `
                        Select-Object -Unique | `
                        Sort-Object) -replace "http://|https://", "").TrimEnd("/|#"))
                }
            }
            $Endpoints | ConvertTo-Json | Out-File -FilePath "${{ github.workspace }}/Endpoints.json" -Encoding "Utf8" -NoNewline
            wrangler kv:key put "endpoints-downloads" --path="${{ github.workspace }}/Endpoints.json" --namespace-id="${{secrets.KV_PROD_NAMESPACE_ID}}"
            Remove-Item -Path "${{ github.workspace }}/Endpoints.json"
